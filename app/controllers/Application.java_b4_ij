package controllers;

import play.mvc.*;

import views.html.*;

import java.io.*;

import org.apache.http.*;

import java.nio.channels.FileChannel;

import play.mvc.*;
import views.html.*;
import java.io.File;
import java.nio.file.StandardCopyOption;

/**
 * This controller contains an action to handle HTTP requests
 * to the application's home page.
 */
public class Application extends Controller
{
    /**
     * An action that renders an HTML page with a welcome message.
     * The configuration in the <code>routes</code> file means that
     * this method will be called when the application receives a
     * <code>GET</code> request with a path of <code>/</code>.
     */
     
     /*
    public Result upload() {
        return ok(index.render("Dude, your new application is ready."));
    }
*/

    /*
    public Result upload()
    {
        try
        {
            File file = request().body().asRaw().asFile();
        }
        
        catch (Exception e)
        {
            e.printStackTrace(System.out);
            //System.err.println("Caught IOException: " + e.getMessage());
        }
        return ok("File uploaded");
    }
    */
    
    /*
    public Result upload()
    {
        Http.MultipartFormData<File> body = request().body().asMultipartFormData();
        Http.MultipartFormData.FilePart<File> picture = body.getFile("picture");
        
        if (picture != null)
        {
            String fileName = picture.getFilename();
            String contentType = picture.getContentType();
            File file = picture.getFile();
            
            try
            {
                File saveFile = new File("C:\\sw\\dolphin\\saved\\" + picture.getFilename());
                saveFile.createNewFile();
                copyFile(file, saveFile);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            
            return ok("File uploaded");
        }
        else
        {
            flash("error", "Missing file");
            return badRequest();
        }
    }
    
    public static void copyFile(File sourceFile, File destFile) throws IOException {
        if(!destFile.exists()) {
            destFile.createNewFile();
        }
    
        FileChannel source = null;
        FileChannel destination = null;
    
        try {
            source = new FileInputStream(sourceFile).getChannel();
            destination = new FileOutputStream(destFile).getChannel();
            destination.transferFrom(source, 0, source.size());
        }
        finally {
            if(source != null) {
                source.close();
            }
            if(destination != null) {
                destination.close();
            }
        }
    }
    */
    
    int imageID = 0;
    /*
    imageID increments for each image uploaded. Need a way to make it static across multiple loads,
    and need a way to avoid redundant image uploads.
    imageID solves the problem of 
    */
    public Result upload()
    {
        try
        {
            Http.MultipartFormData formData = request().body().asMultipartFormData();
            Http.MultipartFormData.FilePart filePart = formData.getFile("fileupload");
            if (filePart != null)
            {
                    String fileName = filePart.getFilename();
                    File srcFile = (File) filePart.getFile();
                    imageID++;
                    File dstFile = new File("public/dolphinImages/image"+imageID+".jpg");
                    java.nio.file.Files.copy(
                            srcFile.toPath(),
                            dstFile.toPath(),
                            StandardCopyOption.REPLACE_EXISTING
                    );
                    //return ok("File uploaded to public/dolphinImages/image"+imageID+".jpg");
                    return ok(index.render("File uploaded"));
            }
            else
            {
                    flash("error", "Missing file");
                    return badRequest();
            }
        }
        catch (Exception e)
        {
            e.printStackTrace(System.out);
        }
        return ok("Should not reach this line, there must have been an error");
    }

}

package controllers;

import play.mvc.*;
import views.html.*;
import java.io.File;
import java.nio.file.StandardCopyOption;

import ij.ImagePlus;
import ij.process.ImageConverter;
import ij.io.Opener;
import ij.io.FileSaver;
import ij.process.ImageProcessor;

public class Application extends Controller {

public Result upload() {
    try {
	Http.MultipartFormData formData = request().body().asMultipartFormData();
	Http.MultipartFormData.FilePart filePart = formData.getFile("fileupload");
	if (filePart != null) {
		// 1 of X: given an uploaded image, copy it to public/dolphinImages/, replace exsisting
		//
        	String fileName = filePart.getFilename();
        	File srcFile = (File) filePart.getFile();
		File dstFile = new File("public/dolphinImages/"+fileName);
		java.nio.file.Files.copy(
			srcFile.toPath(), 
			dstFile.toPath(),
			StandardCopyOption.REPLACE_EXISTING
		);

		// 2 of X: open, transform, save as rotated.jpeg
		//
		Opener opener = new Opener();
		ImagePlus imp = opener.openImage("public/dolphinImages/"+fileName);
		int height = imp.getHeight();
		int width = imp.getWidth();
		int[] pixel = imp.getPixel(0,0); /* get pixel at x,y */

		ImageProcessor ip = imp.getProcessor();
		// get 
		int[] rgb = new int[3];
		ip.getPixel(0,0,rgb);

		// put
		int[] myRgb = new int[3];
		myRgb[0] = 10;
		myRgb[1] = 20;
		myRgb[2] = 30;
		ip.putPixel(0,0,myRgb);

		//ip.rotateRight();
		ip.flipVertical();
   		// Save results
   		FileSaver fs = new FileSaver(imp);
   		boolean ret = fs.saveAsJpeg("public/dolphinImages/rotated.jpeg");
   		//navigate back to index?
		if (ret) {
			return ok("File uploaded to public/dolphinImages/" + fileName 
			+ "\nheight:"+height
			+ "\nwidth:"+width
			+ "\nred:"+pixel[0]
			+ "\ngreen:"+pixel[1]
			+ "\nblue:"+pixel[2]
			+ "\nrgb.r:"+rgb[0]
			+ "\nrgb.g:"+rgb[1]
			+ "\nrgb.b:"+rgb[2]
			); 
		} else {
			return ok("ERROR: File uploaded to public/dolphinImages/" + fileName ); 
		}
	} else {
        	flash("error", "Missing file");
        	return badRequest();
    	}
    } catch (Exception e) {
	e.printStackTrace(System.out);
    }
    return ok("Should not reach this line, there must have been an error");
}

} // end Application class

